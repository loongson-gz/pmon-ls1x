
logo制作，以ls1c为例

1） 修改配置文件
  Targets/LS1X/conf/ls1c
  使能
  option		CONFIG_VIDEO_LOGO
  option		CONFIG_VIDEO_BMP_LOGO
  这两个选项，CONFIG_VIDEO_LOGO选项使能显示logo，在没有自定义logo的情况下使用pmon自带的logo(linux_logo.h 或video_logo.h)。
  CONFIG_VIDEO_BMP_LOGO选项表示使用bmp格式文件制作的logo，注意bmp格式的logo需要转换为256(8bit色深)色，或者制作logo的时候使用256色
  制作，避免转换失真。

2）转换
  fb/目录下有一个名为bmp_logo的工具，
  命令中执行
  ./bmp_logo xxx.bmp
  转换后的数据会打印到当前终端，把数据复制到名为xxx.h的头文件中保存即可，xxx.h的头文件放到fb/目录下，格式大致如下：
/*
 * Automatically generated by "tools/bmp_logo"
 *
 * DO NOT EDIT
 *
 */


#ifndef __BMP_LOGO_H__
#define __BMP_LOGO_H__

#define BMP_LOGO_WIDTH		320
#define BMP_LOGO_HEIGHT		480
#define BMP_LOGO_COLORS		256
#define BMP_LOGO_OFFSET		0

unsigned short bmp_logo_palette[] = {
.......... 数据区
}
#endif /* __BMP_LOGO_H__ */

  或者在执行转换命令的时候把输出定位到指定的头文件，如./bmp_logo xxx.bmp > bmp_logo.h

3）修改cfb_console.c文件
  修改fb/cfb_console.c文件,把
  #include "bmp_logo.h"
  修改为自定义的头文件
  #include "xxx.h"
  大概在243行

  注意：bmp是256色文件，这个注意需要转换，转换可能会失真。

        使用全屏的logo可能导致串口控制台没有输出，需要添加环境变量，修改/pmon/common/env.c文件，
        使能{"novga", "1", 0},环境变量。非全屏的logo不会有该问题。

        pmon支持32bit色深(全彩)的bmp图像格式，需要把bmp图像文件保存到flash的一个位置，启动时调用函数读取，
        但bmp图像本身比较大，占用flash空间比较多，使用起来也有点麻烦，不建议使用。
